/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.project.s2;

import com.project.frames.Lecturer_view;
import com.project.frames.Preview;
import com.project.frames.ViewWorkingDays_new;
import com.project.frames.mainframe;
import com.project.model.DayDetails;
import com.project.util.dbdetail;
import com.students.add.ViewStudents;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author vnaso
 */
public class GenarateTimeTableStructure extends javax.swing.JFrame {

    /**
     * Creates new form GenarateTimeTable
     */
     private static Connection con;
    private PreparedStatement ps2;
    private PreparedStatement ps5;
    private PreparedStatement ps3;
    private PreparedStatement p7;
    private PreparedStatement ps8;
    private PreparedStatement ps9;
    public GenarateTimeTableStructure() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        r_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        l_id = new javax.swing.JTextField();
        s_id = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        r_g = new javax.swing.JButton();
        rtt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tt_id_lec = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        geararate_tt_lec = new javax.swing.JButton();
        s_tt = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        jLabel6.setText("Time Table ID");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(102, 0, 102));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Add Room ID");

        r_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_idActionPerformed(evt);
            }
        });

        jLabel2.setText("Add Lectuerer ID");

        jLabel3.setText("Add Sudent Group ID");

        s_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s_idActionPerformed(evt);
            }
        });

        jButton1.setText("GENARATE STRUCTURE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        r_g.setText("GENARATE STRUCTURE");
        r_g.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_gActionPerformed(evt);
            }
        });

        rtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rttActionPerformed(evt);
            }
        });

        jButton2.setText("View Room IDS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("View Time Table IDs");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("View Time Table for Rooms");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setText("Time Table ID");

        tt_id_lec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tt_id_lecActionPerformed(evt);
            }
        });

        jLabel5.setText("Time Table ID");

        jLabel7.setText("Time Table ID");

        geararate_tt_lec.setText("GENARATE STRUCTURE");
        geararate_tt_lec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geararate_tt_lecActionPerformed(evt);
            }
        });

        jButton6.setText("View Lecture IDS");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("View Time Table for Lectuers");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton5.setText("View Student IDS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setText("View Time Table for Students");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(204, 204, 255));
        jButton9.setText("Main Menu");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel1))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(61, 61, 61)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(rtt, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(geararate_tt_lec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(tt_id_lec)
                                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                                        .addComponent(r_g, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(s_id)
                                                        .addComponent(s_tt))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                                                .addComponent(r_id, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(36, 36, 36)
                        .addComponent(l_id, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(r_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jLabel4)
                            .addComponent(rtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r_g)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(l_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tt_id_lec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(geararate_tt_lec)
                .addGap(114, 114, 114)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(s_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(s_tt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addGap(10, 10, 10)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void r_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_idActionPerformed

    private void s_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s_idActionPerformed

    private void r_gActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_gActionPerformed
        // TODO add your handling code here:
        int id=Integer.parseInt(r_id.getText());
        int ttid=Integer.parseInt(rtt.getText());
        //System.out.println(id);
        //Checking the time table has created
        //verify time table
        //for loop
        int r_i = roomtablecheck(id);
        if(r_i==-90){
            JOptionPane.showMessageDialog(null, "Table has Alredy Created.");
        }else{
            genaratettstructure(id,ttid);
            JOptionPane.showMessageDialog(null, "Succseesfully Created the table.You View it from View Room Time Tables by providung th room id");
        }
        
         
        
    }//GEN-LAST:event_r_gActionPerformed

    private void rttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rttActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Preview ob=new Preview();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DisplayRoomTimetable ob=new DisplayRoomTimetable();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ViewWorkingDays_new ob=new ViewWorkingDays_new();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tt_id_lecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tt_id_lecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tt_id_lecActionPerformed

    private void geararate_tt_lecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geararate_tt_lecActionPerformed
        // TODO add your handling code here:
        int id_lec=Integer.parseInt(l_id.getText());
        int ttid_lec=Integer.parseInt(tt_id_lec.getText());
        //System.out.println(id);
        //genaratettstructureLectuer(id_lec,ttid_lec);
        //JOptionPane.showMessageDialog(null, "Succseesfully Created the table.You can View it from View Lecturers Time Tables by providung the Lectuers id");
        
        //Checking the time table has created
        int r_i = lectablecheck(id_lec);
        if(r_i==-90){
            JOptionPane.showMessageDialog(null, "Table has Alredy Created.");
        }else{
            genaratettstructureLectuer(id_lec,ttid_lec);
            JOptionPane.showMessageDialog(null, "Succseesfully Created the table.You can View it from View Lecturers Time Tables by providung the Lectuers id");
        }
    }//GEN-LAST:event_geararate_tt_lecActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //asd
        int id_stu=Integer.parseInt(s_id.getText());
        int ttid_stu=Integer.parseInt(s_tt.getText());
        //System.out.println(id);
        //genaratettstructureStudent(id_stu,ttid_stu);
         //JOptionPane.showMessageDialog(null, "Succseesfully Created the table.You can View it from View Students Time Tables by providung the Students id");
        int r_i = stutablecheck(id_stu);
        if(r_i==-90){
            JOptionPane.showMessageDialog(null, "Table has Alredy Created.");
        }else{
            genaratettstructureStudent(id_stu,ttid_stu);
            JOptionPane.showMessageDialog(null, "Succseesfully Created the table.You can View it from Students Time Tables by providung the Students id");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Lecturer_view ob=new Lecturer_view();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        DisplayLecturersTimetable ob1=new DisplayLecturersTimetable();
        ob1.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        ViewStudents ob3=new ViewStudents();
        ob3.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        DisplayStudentsTimetable ob4=new DisplayStudentsTimetable();
        ob4.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        mainframe ob=new mainframe();
        ob.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed
    private int roomtablecheck(int id){
        
         try {
             
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select * from room_timetable where roomid =?");
             ps5.setInt(1, id);
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 
                 
                 
                 return (-90);
                 
             }
             
             con.close();
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
         return 0;
    }
    private int lectablecheck(int id){
        
         try {
             
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select * from lec_timetable where lecid =?");
             ps5.setInt(1, id);
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 
                 
                 
                 return (-90);
                 
             }
             
             con.close();
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
         return 0;
    }
     private int stutablecheck(int id){
        
         try {
             
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select * from stu_timetable where stuid =?");
             ps5.setInt(1, id);
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 
                 
                 
                 return (-90);
                 
             }
             
             con.close();
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
         return 0;
    }
    private void genaratettstructureStudent(int stu_id,int stu_timetabletype){
       DayDetails object=new DayDetails();
       object=getOneDetail(stu_timetabletype);
       
       int time=Integer.parseInt(object.getTime());
         String Monday = String.valueOf(object.getMonday());
         String Tuesday = String.valueOf(object.getTuesday());
         String Wednesday = String.valueOf(object.getWednesday());
         String Thursday = String.valueOf(object.getThursday());
         String Friday = String.valueOf(object.getFriday());
         String Saturday = String.valueOf(object.getSaturday());
         String Sunday = String.valueOf(object.getSunday());
       
       
       if(time==0){
           time=5;
       }
       
       String timeslot=object.getTimeslot();
       
       if(timeslot.equals("One hour")){
       
           for(int i=0;i<time;i++){
            int k22=getStudent_index();
            
                float xx=(float) (8.30+i);
               addtotableStudentStruct(k22,stu_id,xx, Monday, Sunday, Sunday, Thursday, Friday, Sunday, Sunday);
               
           }
            String name=gettinngStudentName(stu_id);
             int x_id=get_timetable_index();
             CreatedTableRecords(x_id, "Student", stu_id,name);
       }
       else if(timeslot.equals("30 minutes")){
           for(int i=0;i<time*2;i++){
               int k122=getStudent_index();
            
              float xx1=(float) (8.50+i*0.5);
              
                if(xx1%1==0){
                }
                else{
                    xx1=(float) (xx1-0.20);
                }
                addtotableStudentStruct(k122,stu_id,xx1, Monday, Sunday, Sunday, Thursday, Friday, Sunday, Sunday);
           }
           String name=gettinngStudentName(stu_id);
             int x_id=get_timetable_index();
             CreatedTableRecords(x_id, "Student", stu_id,name);
       }
       else{
           for(int i=0;i<time;i++){
           
           }
       }
       
    }
    private void genaratettstructureLectuer(int lec_id,int lec_timetabletype){
       DayDetails object=new DayDetails();
       object=getOneDetail(lec_timetabletype);
       
       int time=Integer.parseInt(object.getTime());
         String Monday = String.valueOf(object.getMonday());
         String Tuesday = String.valueOf(object.getTuesday());
         String Wednesday = String.valueOf(object.getWednesday());
         String Thursday = String.valueOf(object.getThursday());
         String Friday = String.valueOf(object.getFriday());
         String Saturday = String.valueOf(object.getSaturday());
         String Sunday = String.valueOf(object.getSunday());
       
       
       if(time==0){
           time=5;
       }
       
       String timeslot=object.getTimeslot();
       
       if(timeslot.equals("One hour")){
       
           for(int i=0;i<time;i++){
            int k=get_lec_index();
            
                float xx=(float) (8.30+i);
               addtotableLectuerStruct(k,lec_id,xx, Monday, Sunday, Sunday, Thursday, Friday, Sunday, Sunday);
               
           }
       }
       else if(timeslot.equals("30 minutes")){
           for(int i=0;i<time*2;i++){
               int k1=get_lec_index();
            
              float xx1=(float) (8.50+i*0.5);
              
                if(xx1%1==0){
                }
                else{
                    xx1=(float) (xx1-0.20);
                }
                addtotableLectuerStruct(k1,lec_id,xx1, Monday, Sunday, Sunday, Thursday, Friday, Sunday, Sunday);
           }
       }
       else{
           for(int i=0;i<time;i++){
           
           }
       }
       
    }
    private void genaratettstructure(int id,int timetabletype){
       DayDetails object=new DayDetails();
       object=getOneDetail(timetabletype);
       
       int time=Integer.parseInt(object.getTime());
         String Monday = String.valueOf(object.getMonday());
         String Tuesday = String.valueOf(object.getTuesday());
         String Wednesday = String.valueOf(object.getWednesday());
         String Thursday = String.valueOf(object.getThursday());
         String Friday = String.valueOf(object.getFriday());
         String Saturday = String.valueOf(object.getSaturday());
         String Sunday = String.valueOf(object.getSunday());
       
       
       if(time==0){
           time=5;
       }
       
       String timeslot=object.getTimeslot();
       
       if(timeslot.equals("One hour")){
       
           for(int i=0;i<time;i++){
            int k=getraw_index();
            
                float xx=(float) (8.30+i);
               addtotableSt(k,id,xx, Monday, Sunday, Sunday, Thursday, Friday, Sunday, Sunday);
               
           }
            String name=gettinnglocationName(id);
             int x_id=get_timetable_index();
             CreatedTableRecords(x_id, "Location", id,name);
       }
       else if(timeslot.equals("30 minutes")){
           for(int i=0;i<time*2;i++){
               int k1=getraw_index();
            
              float xx1=(float) (8.50+i*0.5);
              
                if(xx1%1==0){
                }
                else{
                    xx1=(float) (xx1-0.20);
                }
                addtotableSt(k1,id,xx1, Monday, Sunday, Sunday, Thursday, Friday, Sunday, Sunday);
           }
           String name=gettinnglocationName(id);
             int x_id=get_timetable_index();
             CreatedTableRecords(x_id, "Location", id,name);
       }
       else{
           for(int i=0;i<time;i++){
           
           }
       }
       
    }
  
    private void addtotableSt(int id,int roomid,float timeslot,String mon,String tue,String wed,String thur,String fri,String sat,String sun){
         try {
            
             con = dbdetail.getCon();
             ps3 = con.prepareStatement("insert into room_timetable(id,roomid,timeslot,mon,tue,wed,thur,fri,sat,sun) values(?,?,?,?,?,?,?,?,?,?) ");
             ps3.setInt(1, id);
             ps3.setInt(2, roomid);
             ps3.setFloat(3,timeslot);
             ps3.setString(4,mon);
             ps3.setString(5,tue);
             ps3.setString(6,wed);
             ps3.setString(7,thur);
             ps3.setString(8,fri);
             ps3.setString(9,sat);
             ps3.setString(10,sun);
            
             ps3.execute();
             System.out.println("hello");
             
             
             
             con.setAutoCommit(false);
             con.close();
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    private void addtotableLectuerStruct(int id,int lecid,float timeslot,String mon,String tue,String wed,String thur,String fri,String sat,String sun){
         try {
            
             con = dbdetail.getCon();
             ps3 = con.prepareStatement("insert into lec_timetable(id,lecid,timeslot,mon,tue,wed,thur,fri,sat,sun) values(?,?,?,?,?,?,?,?,?,?) ");
             ps3.setInt(1, id);
             ps3.setInt(2, lecid);
             ps3.setFloat(3,timeslot);
             ps3.setString(4,mon);
             ps3.setString(5,tue);
             ps3.setString(6,wed);
             ps3.setString(7,thur);
             ps3.setString(8,fri);
             ps3.setString(9,sat);
             ps3.setString(10,sun);
            
             ps3.execute();
             System.out.println("hello");
             
             
             
             con.setAutoCommit(false);
             con.close();
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    private void addtotableStudentStruct(int id,int stuid,float timeslot,String mon,String tue,String wed,String thur,String fri,String sat,String sun){
         try {
            
             con = dbdetail.getCon();
             ps3 = con.prepareStatement("insert into stu_timetable(id,stuid,timeslot,mon,tue,wed,thur,fri,sat,sun) values(?,?,?,?,?,?,?,?,?,?) ");
             ps3.setInt(1, id);
             ps3.setInt(2, stuid);
             ps3.setFloat(3,timeslot);
             ps3.setString(4,mon);
             ps3.setString(5,tue);
             ps3.setString(6,wed);
             ps3.setString(7,thur);
             ps3.setString(8,fri);
             ps3.setString(9,sat);
             ps3.setString(10,sun);
            
             ps3.execute();
             System.out.println("hello");
             
             
             
             
             con.setAutoCommit(false);
             con.close();
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    private void CreatedTableRecords(int id,String tabletype,int tt_id,String name){
         try {
            
             con = dbdetail.getCon();
             ps3 = con.prepareStatement("insert into timetableLog(id,tabletype,tt_id,name) values(?,?,?,?) ");
             ps3.setInt(1, id);
             ps3.setString(2, tabletype);
             ps3.setInt(3, tt_id);
             ps3.setString(4,name);
             
             ps3.execute();
             System.out.println("hello");
             
             
             
             con.setAutoCommit(false);
             con.close();
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    private String gettinngStudentName(int id){
     try {
             String x;
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select grpid from students where stuid =?");
             ps5.setInt(1, id);
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 x=rs2.getString(1);
                
                 
                 return x;
                 
             }
             
             con.close();
             
             
             
            
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
         return "notfound"; 
    }
    private String gettinnglocationName(int id){
     try {
             String x;
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select name from room where id =?");
             ps5.setInt(1, id);
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 x=rs2.getString(1);
                
                 
                 return x;
                 
             }
             
             con.close();
             
             
             
            
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
         return "notfound"; 
    }
     private int getStudent_index(){
     try {
             int x;
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select id from stu_timetable where id >= all (select id from stu_timetable)");
             
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 x=rs2.getInt(1);
                 x++;
                 
                 return x;
                 
             }
             
             con.close();
             
             
             
             return 0; 
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        return 0;
    
    }
     private int get_timetable_index(){
     try {
             int x;
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select id from timetableLog where id >= all (select id from timetableLog)");
             
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 x=rs2.getInt(1);
                 x++;
                 
                 return x;
                 
             }
             
             con.close();
             
             
             
             return 0; 
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        return 0;
    
    }
    private int getraw_index(){
     try {
             int x;
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select id from room_timetable where id >= all (select id from room_timetable)");
             
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 x=rs2.getInt(1);
                 x++;
                 
                 return x;
                 
             }
             
             con.close();
             
             
             
             return 0; 
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        return 0;
    
    }
    private int get_lec_index(){
     try {
             int x;
             
             con = dbdetail.getCon();
             
             ps5 = con.prepareStatement("select id from lec_timetable where id >= all (select id from lec_timetable)");
             
             ResultSet rs2 = ps5.executeQuery();
             
             while (rs2.next()) {
                 
                 x=rs2.getInt(1);
                 x++;
                 
                 return x;
                 
             }
             
             con.close();
             
             
             
             return 0; 
         } catch (SQLException ex) {
             Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        return 0;
    
    }
  private DayDetails getOneDetail(int id){
         DayDetails ar=new DayDetails();
        try {
           con = dbdetail.getCon();
            ps2 = con.prepareStatement("select Did,nodays,monday,tuesday,wednesday,thursday,friday,saturday,sunday,time,timeslot from Details where DId=?");
             ps2.setInt(1, id);
            ResultSet rs11 = ps2.executeQuery();
             while (rs11.next()) {
                 
                ar.setId(rs11.getInt(1));
                ar.setNodays(rs11.getInt(2));
                 ar.setMonday(rs11.getString(3));
                ar.setTuesday(rs11.getString(4));
                ar.setWednesday(rs11.getString(5));
                ar.setThursday(rs11.getString(6));
                ar.setFriday(rs11.getString(7));
                ar.setSaturday(rs11.getString(8));
                ar.setSunday(rs11.getString(9));
                ar.setTime(rs11.getString(10));
                ar.setTimeslot(rs11.getString(11));
               
                
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ar;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenarateTimeTableStructure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenarateTimeTableStructure().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton geararate_tt_lec;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField l_id;
    private javax.swing.JButton r_g;
    private javax.swing.JTextField r_id;
    private javax.swing.JTextField rtt;
    private javax.swing.JTextField s_id;
    private javax.swing.JTextField s_tt;
    private javax.swing.JTextField tt_id_lec;
    // End of variables declaration//GEN-END:variables
}
